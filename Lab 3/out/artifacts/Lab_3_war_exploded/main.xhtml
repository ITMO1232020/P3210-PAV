<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns:h="http://xmlns.jcp.org/jsf/html" xmlns:ace="http://www.icefaces.org/icefaces/components"
      xmlns:f="http://xmlns.jcp.org/jsf/core"
>

<h:head>
    <meta name="viewport" content="width=device-width, initial-scale=1"/>
    <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Roboto:300,300italic,700,700italic"/>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bulma@0.9.1/css/bulma.min.css"/>
    <script src="https://use.fontawesome.com/releases/v5.14.0/js/all.js"/>
    <script
            src="https://code.jquery.com/jquery-3.5.1.min.js"
            integrity="sha256-9/aliU8dGd2tb6OSsuzixeV4y/faTqgFtohetphbbj0="
            crossorigin="anonymous"></script>
    <title>Work Panel</title>
</h:head>
<h:body>

    <div class="container">
        <div class="row">
            <div class="col">
                <div class="col">
                    <canvas id="canvas" onclick="clickCanvas()"
                            style="background-color:#ffffff;" width="300"
                            height="300">
                    </canvas>
                </div>
                <h:form id="form">


                    <label for="x">X Value:</label>
                    <h:inputText id="x" class="textarea" value="${Record.x}" style="min-height: 0em" disabled="true"/>
                    <table>
                        <td>
                            <h:commandButton value="-4" class="button">
                                <f:ajax listener="#{Record.onXChecked(-4)}" render="x"/>
                            </h:commandButton>
                        </td>
                        <td>
                            <h:commandButton value="-3" class="button">
                                <f:ajax listener="#{Record.onXChecked(-3)}" render="x"/>
                            </h:commandButton>
                        </td>
                        <td>
                            <h:commandButton value="-2" class="button">
                                <f:ajax listener="#{Record.onXChecked(-2)}" render="x"/>
                            </h:commandButton>
                        </td>
                        <td>
                            <h:commandButton value="-1" class="button">
                                <f:ajax listener="#{Record.onXChecked(-1)}" render="x"/>
                            </h:commandButton>
                        </td>
                        <td>
                            <h:commandButton value="0" class="button">
                                <f:ajax listener="#{Record.onXChecked(0)}" render="x"/>
                            </h:commandButton>
                        </td>
                        <td>
                            <h:commandButton value="1" class="button">
                                <f:ajax listener="#{Record.onXChecked(1)}" render="x"/>
                            </h:commandButton>
                        </td>
                        <td>
                            <h:commandButton value="2" class="button">
                                <f:ajax listener="#{Record.onXChecked(2)}" render="x"/>
                            </h:commandButton>
                        </td>
                        <td>
                            <h:commandButton value="3" class="button">
                                <f:ajax listener="#{Record.onXChecked(3)}" render="x"/>
                            </h:commandButton>
                        </td>
                        <td>
                            <h:commandButton value="4" class="button">
                                <f:ajax listener="#{Record.onXChecked(4)}" render="x"/>
                            </h:commandButton>
                        </td>
                    </table>

                    <ace:messages id="msgs" initEffect="highlight"
                                  changeEffect="puff" />

                    <label for="y" >Y Value:</label>
                    <h:inputText id="y" class="textarea" value="#{Record.y}" style="min-height: 0em" required="true" maxlength="4">
                        <f:validateLength maximum="4"/>
                        <f:validateDoubleRange minimum="-4.999999" maximum="4.999999"/>
                        <ace:ajax event="blur" render="msgs"/>
                    </h:inputText>

                    <label for="r">R Value:</label>
                    <h:inputText id="r" class="textarea" value="#{Record.r}" style="min-height: 0em" required="true" maxlength="4">
                        <f:validateLength maximum="4"/>
                        <f:validateDoubleRange minimum="2.000001" maximum="4.999999"/>
                        <ace:ajax event="blur" render="msgs"/>
                    </h:inputText>

                    <br/>
                    <h:commandButton class="button" action="#{Record.onSubmit}" value="Send">
                        <f:ajax render="table" execute="form"/>
                    </h:commandButton>
                    <h:commandButton class="button" action="#{Record.back}" value="Back Home"/>


                    <h:commandButton style="display:none" id="refresh_table" >
                        <f:ajax render="table"/>
                    </h:commandButton>

                    <ace:dataTable id="table"
                                   value="#{History.results}"
                                   var="result"
                                   >

                        <ace:column id="id" headerText="Id">
                            <h:outputText value="#{result.id}"/>
                        </ace:column>

                        <ace:column id="col_x" headerText="X">
                            <h:outputText value="#{result.x}"/>
                        </ace:column>

                        <ace:column id="col_y" headerText="Y">
                            <h:outputText value="#{result.y}"/>
                        </ace:column>

                        <ace:column id="col_r" headerText="R">
                            <h:outputText value="#{result.r}"/>
                        </ace:column>

                        <ace:column id="col_res" headerText="Result">
                            <h:outputText value="#{result.result}"/>
                        </ace:column>

                    </ace:dataTable>
                </h:form>
            </div>

        </div>
    </div>

    <script type="text/javascript">

        var wsUri = "ws://" + document.location.host + "/lab3/" + "backdoor";
        var websocket = new WebSocket(wsUri);
        websocket.onmessage = function (evt) {
            var data = JSON.parse(evt.data.toString());
            var x = data['x'] * 130 / data['r'] + 150;
            var y = 150 - 130 * data['y'] / data['r'];

            drawPoint('canvas', x, y, data['inArea']);

            document.getElementById("form:refresh_table").click()
        };

        document.addEventListener("DOMContentLoaded", function (event) {
            drawCanvas("canvas", document.getElementById("form:r").value);
        });

        const input = document.getElementById("form:r");

        input.addEventListener("input", function (event) {
            drawCanvas("canvas", document.getElementById("form:r").value);
        });

        function drawCanvas(id, r) {
            var canvas = document.getElementById(id),
                context = canvas.getContext("2d");
            //очистка
            context.clearRect(0, 0, canvas.width, canvas.height);

            //прямоугольник
            context.beginPath();
            context.rect(150, 85, 130, 65);
            context.closePath();
            context.strokeStyle = "#8affa7";
            context.fillStyle = "#8affa7";
            context.fill();
            context.stroke();

            // сектор
            context.beginPath();
            context.moveTo(150, 150);
            context.arc(150, 150, 65, Math.PI, 3 * Math.PI / 2, false);
            context.closePath();
            context.strokeStyle = "#ffe5dc";
            context.fillStyle = "#ffe5dc";
            context.fill();
            context.stroke();

            //треугольник
            context.beginPath();
            context.moveTo(150, 150);
            context.lineTo(150, 150 + 130);
            context.lineTo(150 + 130, 150);
            context.lineTo(150, 150);
            context.closePath();
            context.strokeStyle = "#e0e1ff";
            context.fillStyle = "#e0e1ff";
            context.fill();
            context.stroke();

            //отрисовка осей
            context.beginPath();
            context.font = "10px Verdana";
            context.moveTo(150, 0);
            context.lineTo(150, 300);
            context.moveTo(150, 0);
            context.lineTo(145, 15);
            context.moveTo(150, 0);
            context.lineTo(155, 15);
            context.strokeStyle = "#000000";
            context.fillStyle = "#000000";
            context.fillText("Y", 160, 10);
            context.moveTo(0, 150);
            context.lineTo(300, 150);
            context.moveTo(300, 150);
            context.lineTo(285, 145);
            context.moveTo(300, 150);
            context.lineTo(285, 155);
            context.fillText("X", 290, 135);

            // деления X
            context.moveTo(145, 20);
            context.lineTo(155, 20);
            context.fillText(r, 160, 20);
            context.moveTo(145, 85);
            context.lineTo(155, 85);
            context.fillText((r / 2), 160, 78);
            context.moveTo(145, 215);
            context.lineTo(155, 215);
            context.fillText(-(r / 2), 160, 215);
            context.moveTo(145, 280);
            context.lineTo(155, 280);
            context.fillText(-r, 160, 280);
            // деления Y
            context.moveTo(20, 145);
            context.lineTo(20, 155);
            context.fillText(-r, 20, 170);
            context.moveTo(85, 145);
            context.lineTo(85, 155);
            context.fillText(-(r / 2), 70, 170);
            context.moveTo(215, 145);
            context.lineTo(215, 155);
            context.fillText((r / 2), 215, 170);
            context.moveTo(280, 145);
            context.lineTo(280, 155);
            context.fillText(r, 280, 170);

            context.closePath();
            context.strokeStyle = "black";
            context.fillStyle = "black";
            context.stroke();
        }

        function clickCanvas() {
            var elem = document.getElementById('canvas');
            var R = document.getElementById("form:r").value;
            console.log(R);

            var br = elem.getBoundingClientRect();
            var left = br.left;
            var top = br.top;
            var event = window.event;
            var x = event.clientX - left;
            var y = event.clientY - top;
            console.log(x, y, R);

            var transf_x = R * (x - 150) / 130;
            var transf_y = R * (150 - y) / 130;

            data = JSON.stringify({
                'x': transf_x,
                'y': transf_y,
                'r': R
            });
            websocket.send(data)
        }

        function drawPoint(id, x, y, isArea) {
            var canvas = document.getElementById(id),
                context = canvas.getContext("2d");

            context.beginPath();
            context.ellipse(x - 1, y - 1, 2, 2, 1, 0, 2 * Math.PI, true);
            context.closePath();
            if (isArea) {
                context.strokeStyle = "#dc3545";
                context.fillStyle = "#dc3545";
            } else {
                context.strokeStyle = "#281845";
                context.fillStyle = "#281845";
            }
            context.fill();
            context.stroke();

        }
    </script>

</h:body>
</html>
